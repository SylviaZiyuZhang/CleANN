L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
Recall with 1 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1], 'Search': [0.98375], 'Recall': []}
Times with 1 threads: [('Indexing', 3.275991439819336), ('Search', 0.41768598556518555), ('Total', 3.7315733432769775)]
Speedups with 1 threads: [('Indexing', 1.0), ('Search', 1.0), ('Total', 1.0)]
Recall with 2 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1], 'Search': [0.98375, 0.983875], 'Recall': []}
Times with 2 threads: [('Indexing', 1.652348279953003), ('Search', 0.2399446964263916), ('Total', 1.9155664443969727)]
Speedups with 2 threads: [('Indexing', 1.9826276818059891), ('Search', 1.7407593990864476), ('Total', 1.9480260547431392)]
Recall with 4 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1], 'Search': [0.98375, 0.983875, 0.984125], 'Recall': []}
Times with 4 threads: [('Indexing', 0.9853427410125732), ('Search', 0.19562220573425293), ('Total', 1.2016558647155762)]
Speedups with 4 threads: [('Indexing', 3.3247227624093627), ('Search', 2.1351665267111843), ('Total', 3.105359406838343)]
Recall with 8 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1, -1], 'Search': [0.98375, 0.983875, 0.984125, 0.984], 'Recall': []}
Times with 8 threads: [('Indexing', 0.5712366104125977), ('Search', 0.1243896484375), ('Total', 0.7193686962127686)]
Speedups with 8 threads: [('Indexing', 5.734911558720168), ('Search', 3.357883801521099), ('Total', 5.187289025672706)]
[5456, 3020, 3761, 3439, 7247, 1925, 2763, 2133, 6140, 2865] [9925, 2940, 4182, 6236, 7828, 8484, 1996, 7572, 3834, 5282]
[1.2270296, 1.2228825, 1.2258312, 1.21644, 1.2194127, 1.2238562, 1.2135615, 1.1984605, 1.2034361, 1.2029694] [1.2270296, 1.2258312, 1.2238562, 1.2194127, 1.2228825, 1.2135615, 1.2034361, 1.2029694, 1.21644, 1.1984605]
Recall with 1 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1], 'Search': [0.963875], 'Recall': []}
Times with 1 threads: [('Indexing', 2.9111180305480957), ('Search', 0.33042144775390625), ('Total', 3.269070625305176)]
Speedups with 1 threads: [('Indexing', 1.0), ('Search', 1.0), ('Total', 1.0)]
Recall with 2 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1], 'Search': [0.963875, 0.963875], 'Recall': []}
Times with 2 threads: [('Indexing', 1.7537713050842285), ('Search', 0.21429657936096191), ('Total', 1.9863617420196533)]
Speedups with 2 threads: [('Indexing', 1.6599188401068536), ('Search', 1.541888576752983), ('Total', 1.6457579483892573)]
Recall with 4 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1], 'Search': [0.963875, 0.963875, 0.963], 'Recall': []}
Times with 4 threads: [('Indexing', 0.9606037139892578), ('Search', 0.14518380165100098), ('Total', 1.1145784854888916)]
Speedups with 4 threads: [('Indexing', 3.0305088228928603), ('Search', 2.275883700498403), ('Total', 2.933010701234962)]
Recall with 8 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1, -1], 'Search': [0.963875, 0.963875, 0.963, 0.963375], 'Recall': []}
Times with 8 threads: [('Indexing', 0.5599720478057861), ('Search', 0.11301708221435547), ('Total', 0.6831533908843994)]
Speedups with 8 threads: [('Indexing', 5.198684544978845), ('Search', 2.9236416414220256), ('Total', 4.785265899175425)]
