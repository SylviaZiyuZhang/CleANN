L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
L2: Using AVX2 distance computation DistanceL2Float
Recall with 1 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1], 'Search': [0.99925], 'Recall': []}
Times with 1 threads: [('Indexing', 0.24176025390625), ('Search', 0.24837207794189453), ('Total', 0.4992220401763916)]
Speedups with 1 threads: [('Indexing', 1.0), ('Search', 1.0), ('Total', 1.0)]
Recall with 2 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1], 'Search': [0.99925, 0.99925], 'Recall': []}
Times with 2 threads: [('Indexing', 0.13088250160217285), ('Search', 0.14806771278381348), ('Total', 0.2815079689025879)]
Speedups with 2 threads: [('Indexing', 1.8471548980710835), ('Search', 1.6774222635864622), ('Total', 1.7733851092120976)]
Recall with 4 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1], 'Search': [0.99925, 0.99925, 0.9995], 'Recall': []}
Times with 4 threads: [('Indexing', 0.06939840316772461), ('Search', 0.11240553855895996), ('Total', 0.18372154235839844)]
Speedups with 4 threads: [('Indexing', 3.4836573014793286), ('Search', 2.209607116571184), ('Total', 2.717275468994944)]
Recall with 8 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1, -1], 'Search': [0.99925, 0.99925, 0.9995, 0.9995], 'Recall': []}
Times with 8 threads: [('Indexing', 0.042073726654052734), ('Search', 0.09593701362609863), ('Total', 0.13890814781188965)]
Speedups with 8 threads: [('Indexing', 5.746109820366068), ('Search', 2.5889077484722494), ('Total', 3.5939003437900667)]
[174, 825, 724, 645, 121, 440, 90, 346, 753, 215] [905, 703, 560, 509, 875, 188, 512, 573, 475, 869]
[1.2704685, 1.2659388, 1.260122, 1.2584348, 1.2620993, 1.2546837, 1.1999747, 1.2522179, 1.2550925, 1.2056633] [1.2704685, 1.2659388, 1.2620993, 1.2584348, 1.2550925, 1.260122, 1.1999747, 1.2522179, 1.2546837, 1.2056633]
Recall with 1 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1], 'Search': [0.011375], 'Recall': []}
Times with 1 threads: [('Indexing', 0.14531898498535156), ('Search', 0.24171900749206543), ('Total', 0.38855576515197754)]
Speedups with 1 threads: [('Indexing', 1.0), ('Search', 1.0), ('Total', 1.0)]
Recall with 2 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1], 'Search': [0.011375, 0.011375], 'Recall': []}
Times with 2 threads: [('Indexing', 0.10245633125305176), ('Search', 0.18921256065368652), ('Total', 0.29332900047302246)]
Speedups with 2 threads: [('Indexing', 1.4183504641253988), ('Search', 1.2774997952407654), ('Total', 1.3246414930858945)]
Recall with 4 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1], 'Search': [0.011375, 0.011375, 0.011375], 'Recall': []}
Times with 4 threads: [('Indexing', 0.06291675567626953), ('Search', 0.1670820713043213), ('Total', 0.23126649856567383)]
Speedups with 4 threads: [('Indexing', 2.309702454034226), ('Search', 1.4467082291061697), ('Total', 1.6801212781004575)]
Recall with 8 threads: [('Indexing', 'Indexing'), ('Search', 'Search'), ('Recall', 'Recall')]
{'Indexing': [-1, -1, -1, -1], 'Search': [0.011375, 0.011375, 0.011375, 0.011375], 'Recall': []}
Times with 8 threads: [('Indexing', 0.03735780715942383), ('Search', 0.14045429229736328), ('Total', 0.1789851188659668)]
Speedups with 8 threads: [('Indexing', 3.8899227774586764), ('Search', 1.720979854288178), ('Total', 2.1708830746032466)]
